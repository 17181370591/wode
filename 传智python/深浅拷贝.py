from copy import *

a=[1,2]
b=[3,4]

c=(a,b)
d=c
e=copy(c)
f=deepcopy(c)

print(id(c),id(d),id(e),id(f))
#52368840 52368840 52368840 52301448

o=[a,b]
p=o
q=copy(o)
r=deepcopy(o)

print(id(o),id(p),id(q),id(r))
#52298696 52298696 52298824 49179848

a[0]=0

print(c,d,e,f)
#([0, 2], [3, 4]) ([0, 2], [3, 4]) ([0, 2], [3, 4]) ([1, 2], [3, 4])
print(o,p,q,r)
#[[0, 2], [3, 4]] [[0, 2], [3, 4]] [[0, 2], [3, 4]] [[1, 2], [3, 4]]

'''结论：
d=c表示d和c指向同一个地址，那么d和c永远相等

copy会有时指向同一个，有时新建一个，跟被拷贝对象能否修改有关，
然后内部的引用依旧不变

deepcopy始终新建一个对象并赋值，内部的引用也全部新建
'''


