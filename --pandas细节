import pandas as pd
>>> c=pd.read_csv(r'C:\Users\Administrator\Desktop\jiu.csv')
>>> c
               a             b          c       d    e
0   1.378641e+10  6.465133e+10  5382382.0     NaN  NaN
1            NaN  6.542961e+10  5382382.0     NaN  NaN
2   1.558085e+10  6.545101e+10   565624.0     NaN  3.0
3            NaN  6.441465e+10   565624.0     NaN  3.0
4            NaN           NaN        NaN     NaN  NaN
5   1.814204e+10  6.458017e+10   394174.0   550.0  2.0
==============================================================================
>>> data=p.date_range('20171111',periods=3)
>>> data
DatetimeIndex(['2017-11-11', '2017-11-12', '2017-11-13'], dtype='datetime64[ns]', freq='D')
>>> d=p.DataFrame(data=np.random.randint(1,5,(3,4)),index=data)
>>> d
            0  1  2  3
2017-11-11  3  3  2  4
2017-11-12  2  1  2  4
2017-11-13  1  1  3  1
=================================================================================
df[df.isnull().values==True]可以只显示存在缺失值的行列，清楚的确定缺失值的位置。
https://www.cnblogs.com/chaosimple/p/4153083.html
obj = Series([7,-5,7,4,2,0,4])
#而numpy中的argsort函数比较奇怪，返回的是把数据进行排序之后，按照值得顺序对应的下标，下标从0开始
print np.argsort(obj)
 #打印结果为：1,5,4,3,6,0,2 
=================================================================================

>>> q
    a  b  c
s1  0  1  2
s2  3  4  5

>>> q.stack()
s1  a    0
    b    1
    c    2
s2  a    3
    b    4
    c    5
dtype: int32

>>> q.stack().index
MultiIndex(levels=[['s1', 's2'], ['a', 'b', 'c']],
           labels=[[0, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 2]])

>>> q.unstack()
a  s1    0
   s2    3
b  s1    1
   s2    4
c  s1    2
   s2    5
dtype: int32

>>> q.unstack().index
MultiIndex(levels=[['a', 'b', 'c'], ['s1', 's2']],
           labels=[[0, 0, 1, 1, 2, 2], [0, 1, 0, 1, 0, 1]])
           
stack将columns转为index，unstack将index转成columns并作为index，相当于转置后stack，
即q.T.stack()==q.unstack()   ，   q.T.unstack()==q.stack()
